Type nat : set
	| O
	| S nat

Check O

Ind plus : nat -> nat -> nat
	| O x = x
	| x O = x
	| (S x) y = (S (plus x y))

Def one = S O

Prop simple_prop
	If x : nat, plus x O = one
	Then x = one

Prove simple_prop
	intro x
	apply plus
	reflex
	qed